{"ast":null,"code":"var _jsxFileName = \"A:\\\\Javascripts\\\\ReactJS\\\\job-app\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Jobs from \"../src/Components/Jobs\";\nlet mockJobs = [];\nlet searchKeywords = [];\nlet mockFilteredJobs = [];\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mockJobs: [],\n      isRemote: false,\n      filteredJobs: []\n    };\n\n    this.handleLoad = async () => {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      const url = \"https://jobs.github.com/positions.json\"; // site that doesn’t send Access-Control-*\n\n      fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.json()).then(contents => {\n        // convert objects to array\n        mockJobs = Object.keys(contents).map(key => {\n          return contents[key];\n        });\n        this.setState({\n          mockJobs: this.state.mockJobs\n        });\n        mockJobs = mockJobs.sort((a, b) => {\n          return a.diffDays - b.diffDays;\n        }); // filter jobs by these keywords\n\n        mockJobs = mockJobs.filter(job => {\n          let jobTitle = job.title.toLowerCase();\n\n          if (jobTitle.includes('senior') || jobTitle.includes('manager') || jobTitle.includes('sr.') || jobTitle.includes('architect') || jobTitle.includes('lead') || jobTitle.includes('director') || jobTitle.includes('coach') || jobTitle.includes('master') || jobTitle.includes('specialist')) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        this.setState({\n          mockJobs: this.state.mockJobs\n        });\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        isRemote: !this.state.isRemote\n      });\n\n      if (!this.state.isRemote) {\n        mockJobs = mockJobs.filter(job => {\n          const jobLocation = job.location.toLowerCase();\n\n          if (jobLocation.includes('remote')) {\n            return true;\n          }\n\n          return false;\n        });\n      } else this.handleLoad();\n    };\n\n    this.handleChange = e => {\n      const keyword = e.target.value.toLowerCase();\n      let filteredJobs = [];\n      searchKeywords.push(keyword);\n\n      if (searchKeywords.length > 1) {\n        if (searchKeywords[searchKeywords.length - 2].length > keyword.length) {\n          mockJobs.forEach(job => {\n            if (job.title.toLowerCase().includes(keyword)) {\n              filteredJobs.push(job);\n            }\n          });\n        } else {\n          mockJobs.forEach(job => {\n            if (job.title.toLowerCase().includes(keyword)) {\n              filteredJobs.push(job);\n            }\n          });\n        }\n      } // mockJobs = filteredJobs;\n\n\n      this.setState({\n        filteredJobs: this.state.filteredJobs\n      });\n      mockJobs = [];\n      mockFilteredJobs = filteredJobs;\n      console.log(filteredJobs); // const keyword = e.target.value.toLowerCase();\n      // searchKeywords.push(keyword);\n      // if (searchKeywords.length > 1) {\n      //   if (searchKeywords[searchKeywords.length - 2].length > keyword.length) {\n      //     // this.handleLoad();\n      //     let arr = mockJobs;\n      //     arr = arr.filter(job => {\n      //       const title = job.title.toLowerCase();\n      //       if (title.includes(keyword)) {\n      //         return true;\n      //       }\n      //       else {\n      //         return null;\n      //       }\n      //     });\n      //   }\n      //   else {\n      //     mockJobs = mockJobs.filter(job => {\n      //       const title = job.title.toLowerCase();\n      //       console.log(e.target.value.toLowerCase())\n      //       if (title.includes(keyword)) {\n      //         return true;\n      //       }\n      //       else {\n      //         return false;\n      //       }\n      //     });\n      //   }\n      // }\n    };\n  }\n\n  async componentDidMount() {\n    this.handleLoad();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Jobs, {\n      jobs: mockJobs,\n      handleClick: this.handleClick,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["A:/Javascripts/ReactJS/job-app/client/src/App.js"],"names":["React","Jobs","mockJobs","searchKeywords","mockFilteredJobs","App","Component","state","isRemote","filteredJobs","handleLoad","proxyurl","url","fetch","then","response","json","contents","Object","keys","map","key","setState","sort","a","b","diffDays","filter","job","jobTitle","title","toLowerCase","includes","handleClick","jobLocation","location","handleChange","e","keyword","target","value","push","length","forEach","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Jobs from \"../src/Components/Jobs\";\n\nlet mockJobs = [];\nlet searchKeywords = [];\nlet mockFilteredJobs = [];\n\nexport default class App extends React.Component {\n\n  state = {\n    mockJobs: [],\n    isRemote: false,\n    filteredJobs: [],\n  }\n\n  async componentDidMount() {\n\n    this.handleLoad();\n  }\n\n  handleLoad = async () => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://jobs.github.com/positions.json\"; // site that doesn’t send Access-Control-*\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.json())\n      .then(contents => {\n\n        // convert objects to array\n        mockJobs = Object.keys(contents).map((key) => {\n          return contents[key];\n        });\n\n        this.setState({\n          mockJobs: this.state.mockJobs,\n        });\n        mockJobs = mockJobs.sort((a, b) => {\n          return a.diffDays - b.diffDays;\n        });\n\n        // filter jobs by these keywords\n        mockJobs = mockJobs.filter(job => {\n          let jobTitle = job.title.toLowerCase();\n          if (\n            jobTitle.includes('senior') || jobTitle.includes('manager') || jobTitle.includes('sr.')\n            || jobTitle.includes('architect') || jobTitle.includes('lead') || jobTitle.includes('director')\n            || jobTitle.includes('coach') || jobTitle.includes('master') || jobTitle.includes('specialist')\n          ) { return false; }\n          else {\n            return true;\n          }\n        });\n\n        this.setState({\n          mockJobs: this.state.mockJobs,\n        });\n      });\n  }\n\n  handleClick = () => {\n    this.setState({\n      isRemote: !this.state.isRemote,\n    });\n\n    if (!this.state.isRemote) {\n      mockJobs = mockJobs.filter(job => {\n        const jobLocation = job.location.toLowerCase();\n        if (jobLocation.includes('remote')) {\n          return true;\n        }\n        return false;\n      });\n    }\n    else this.handleLoad();\n  }\n\n  //check to delete letter\n  handleChange = (e) => {\n\n    const keyword = e.target.value.toLowerCase();\n    let filteredJobs = [];\n    searchKeywords.push(keyword);\n    if (searchKeywords.length > 1) {\n      if (searchKeywords[searchKeywords.length - 2].length > keyword.length) {\n        mockJobs.forEach(job => {\n          if (job.title.toLowerCase().includes(keyword)) {\n            filteredJobs.push(job);\n          }\n        });\n      }\n      else {\n        mockJobs.forEach(job => {\n          if (job.title.toLowerCase().includes(keyword)) {\n            filteredJobs.push(job);\n          }\n        });\n\n      }\n    }\n    // mockJobs = filteredJobs;\n    this.setState({\n      filteredJobs: this.state.filteredJobs,\n    });\n    mockJobs = [];\n    mockFilteredJobs = filteredJobs;\n    console.log(filteredJobs);\n\n    // const keyword = e.target.value.toLowerCase();\n    // searchKeywords.push(keyword);\n\n    // if (searchKeywords.length > 1) {\n    //   if (searchKeywords[searchKeywords.length - 2].length > keyword.length) {\n    //     // this.handleLoad();\n    //     let arr = mockJobs;\n    //     arr = arr.filter(job => {\n    //       const title = job.title.toLowerCase();\n\n    //       if (title.includes(keyword)) {\n    //         return true;\n    //       }\n    //       else {\n    //         return null;\n    //       }\n    //     });\n    //   }\n    //   else {\n\n    //     mockJobs = mockJobs.filter(job => {\n    //       const title = job.title.toLowerCase();\n    //       console.log(e.target.value.toLowerCase())\n    //       if (title.includes(keyword)) {\n    //         return true;\n    //       }\n    //       else {\n    //         return false;\n    //       }\n    //     });\n    //   }\n    // }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jobs jobs={mockJobs} handleClick={this.handleClick} handleChange={this.handleChange} />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}