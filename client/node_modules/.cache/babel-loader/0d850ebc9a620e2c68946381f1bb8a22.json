{"ast":null,"code":"var _jsxFileName = \"A:\\\\Javascripts\\\\ReactJS\\\\job-app\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Jobs from \"../src/Components/Jobs\";\nlet mockJobs = [];\nconst obj = [{\n  title: \"SW1\",\n  company: \"company 1\"\n}, {\n  title: \"SW1\",\n  company: \"company 2\"\n}, {\n  title: \"SW1\",\n  company: \"company 3\"\n}, {\n  title: \"SW1\",\n  company: \"company 4\"\n}, {\n  title: \"SW1\",\n  company: \"company 5\"\n}, {\n  title: \"SW1\",\n  company: \"company 6\"\n}];\nconsole.log();\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoad = async () => {\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      const url = \"https://jobs.github.com/positions.json\"; // site that doesn’t send Access-Control-*\n\n      fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.json()).then(contents => {\n        mockJobs = Object.keys(contents).map(function (key) {\n          return contents[key];\n        });\n        console.log(mockJobs);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleLoad();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Jobs, {\n      jobs: obj,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["A:/Javascripts/ReactJS/job-app/client/src/App.js"],"names":["React","Jobs","mockJobs","obj","title","company","console","log","App","Component","handleLoad","proxyurl","url","fetch","then","response","json","contents","Object","keys","map","key","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA,MAAMC,GAAG,GAAG,CAEV;AAACC,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAFU,EAGV;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAHU,EAIV;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAJU,EAKV;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CALU,EAMV;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CANU,EAOV;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAPU,CAAZ;AASAC,OAAO,CAACC,GAAR;AACA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAO/CC,UAP+C,GAOlC,YAAY;AAEvB,YAAMC,QAAQ,GAAG,sCAAjB;AACA,YAAMC,GAAG,GAAG,wCAAZ,CAHuB,CAG+B;;AACtDC,MAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,CAAL,CAAsB;AAAtB,OACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChBf,QAAAA,QAAQ,GAAGgB,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,GAAtB,CAA0B,UAASC,GAAT,EAAa;AAChD,iBAAOJ,QAAQ,CAACI,GAAD,CAAf;AACD,SAFU,CAAX;AAGAf,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,OAPH;AAQD,KAnB8C;AAAA;;AAE/CoB,EAAAA,iBAAiB,GAAG;AAElB,SAAKZ,UAAL;AACD;;AAgBDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEpB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA3B8C","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Jobs from \"../src/Components/Jobs\";\n\nlet mockJobs = [];\n\nconst obj = [\n\n  {title: \"SW1\", company: \"company 1\"},\n  {title: \"SW1\", company: \"company 2\"},\n  {title: \"SW1\", company: \"company 3\"},\n  {title: \"SW1\", company: \"company 4\"},\n  {title: \"SW1\", company: \"company 5\"},\n  {title: \"SW1\", company: \"company 6\"},\n]\nconsole.log()\nexport default class App extends React.Component {\n\n  componentDidMount() {\n\n    this.handleLoad();\n  }\n\n  handleLoad = async () => {\n\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://jobs.github.com/positions.json\"; // site that doesn’t send Access-Control-*\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then(response => response.json())\n      .then(contents => {\n        mockJobs = Object.keys(contents).map(function(key){\n          return contents[key]\n        });\n        console.log(mockJobs)\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Jobs jobs={obj} />\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}